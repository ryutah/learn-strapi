{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/card.js","webpack://gatsby-starter-default/./src/components/articles.js","webpack://gatsby-starter-default/./src/pages/category/{StrapiCategory.slug}.js"],"names":["article","Link","to","node","slug","className","G","image","localFile","childImageSharp","gatsbyImageData","alt","id","category","name","title","data-uk-grid","author","picture","style","borderRadius","articles","leftArticlesCount","Math","ceil","length","leftArticles","slice","rightArticles","map","i","key","data","edges","seo","metaTitle","metaDescription"],"mappings":"uMAiDA,EA7Ca,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACd,OACE,gBAAC,EAAAC,KAAD,CAAMC,GAAE,YAAcF,EAAQG,KAAKC,KAAQC,UAAU,iBACnD,uBAAKA,UAAU,yBACb,uBAAKA,UAAU,qBACb,gBAAC,EAAAC,EAAD,CACEC,MAAOP,EAAQG,KAAKI,MAAMC,UAAUC,gBAAgBC,gBACpDC,IAAG,gBAGP,uBAAKN,UAAU,gBACb,qBAAGO,GAAG,WAAWP,UAAU,qBACxBL,EAAQG,KAAKU,SAASC,MAEzB,qBAAGF,GAAG,QAAQP,UAAU,iBACrBL,EAAQG,KAAKY,OAEhB,2BACE,sBAAIV,UAAU,qBACd,uBAAKA,UAAU,6BAA6BW,eAAa,QACvD,2BACGhB,EAAQG,KAAKc,OAAOC,SACnB,gBAAC,EAAAZ,EAAD,CACEC,MACEP,EAAQG,KAAKc,OAAOC,QAAQV,UAAUC,gBACnCC,gBAELC,IAAG,cAAgBX,EAAQG,KAAKc,OAAOH,KACvCK,MAAO,CAAEC,aAAc,UAI7B,uBAAKf,UAAU,mBACb,qBAAGA,UAAU,2BACVL,EAAQG,KAAKc,OAAOH,aCAvC,EAnCiB,SAAC,GAAkB,IAAhBO,EAAe,EAAfA,SACZC,EAAoBC,KAAKC,KAAKH,EAASI,OAAS,GAChDC,EAAeL,EAASM,MAAM,EAAGL,GACjCM,EAAgBP,EAASM,MAAML,EAAmBD,EAASI,QAEjE,OACE,2BACE,uBAAKpB,UAAU,uBAAuBW,eAAa,QACjD,2BACGU,EAAaG,KAAI,SAAC7B,EAAS8B,GAC1B,OACE,gBAAC,EAAD,CACE9B,QAASA,EACT+B,IAAG,kBAAoB/B,EAAQG,KAAKC,WAK5C,2BACE,uBAAKC,UAAU,qCAAqCW,gBAAA,GACjDY,EAAcC,KAAI,SAAC7B,EAAS8B,GAC3B,OACE,gBAAC,EAAD,CACE9B,QAASA,EACT+B,IAAG,mBAAqB/B,EAAQG,KAAKC,gB,wECkCvD,UApBiB,SAAC,GAAc,IAAZ4B,EAAW,EAAXA,KACZX,EAAWW,EAAKX,SAASY,MACzBpB,EAAWmB,EAAKnB,SAASC,KACzBoB,EAAM,CACVC,UAAWtB,EACXuB,gBAAgB,OAAQvB,EAAT,aAGjB,OACE,gBAAC,IAAD,CAAQqB,IAAKA,GACX,uBAAK7B,UAAU,cACb,uBAAKA,UAAU,mCACb,0BAAKQ,GACL,gBAAC,IAAD,CAAmBQ,SAAUA","file":"component---src-pages-category-strapi-category-slug-js-0fca8a57e87bab6aa297.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst Card = ({ article }) => {\n  return (\n    <Link to={`/article/${article.node.slug}`} className=\"uk-link-reset\">\n      <div className=\"uk-card uk-card-muted\">\n        <div className=\"uk-card-media-top\">\n          <GatsbyImage\n            image={article.node.image.localFile.childImageSharp.gatsbyImageData}\n            alt={`Hero image`}\n          />\n        </div>\n        <div className=\"uk-card-body\">\n          <p id=\"category\" className=\"uk-text-uppercase\">\n            {article.node.category.name}\n          </p>\n          <p id=\"title\" className=\"uk-text-large\">\n            {article.node.title}\n          </p>\n          <div>\n            <hr className=\"uk-divider-small\" />\n            <div className=\"uk-grid-small uk-flex-left\" data-uk-grid=\"true\">\n              <div>\n                {article.node.author.picture && (\n                  <GatsbyImage\n                    image={\n                      article.node.author.picture.localFile.childImageSharp\n                        .gatsbyImageData\n                    }\n                    alt={`Picture of ${article.node.author.name}`}\n                    style={{ borderRadius: \"50%\" }}\n                  />\n                )}\n              </div>\n              <div className=\"uk-width-expand\">\n                <p className=\"uk-margin-remove-bottom\">\n                  {article.node.author.name}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./card\";\n\nconst Articles = ({ articles }) => {\n  const leftArticlesCount = Math.ceil(articles.length / 5);\n  const leftArticles = articles.slice(0, leftArticlesCount);\n  const rightArticles = articles.slice(leftArticlesCount, articles.length);\n\n  return (\n    <div>\n      <div className=\"uk-child-width-1-2@s\" data-uk-grid=\"true\">\n        <div>\n          {leftArticles.map((article, i) => {\n            return (\n              <Card\n                article={article}\n                key={`article__left__${article.node.slug}`}\n              />\n            );\n          })}\n        </div>\n        <div>\n          <div className=\"uk-child-width-1-2@m uk-grid-match\" data-uk-grid>\n            {rightArticles.map((article, i) => {\n              return (\n                <Card\n                  article={article}\n                  key={`article__right__${article.node.slug}`}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Articles;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport ArticlesComponent from \"../../components/articles\";\nimport Layout from \"../../components/layout\";\n\nexport const query = graphql`\n  query Category($slug: String!) {\n    articles: allStrapiArticle(filter: { category: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          slug\n          title\n          category {\n            name\n          }\n          image {\n            localFile {\n              childImageSharp {\n                gatsbyImageData(width: 660)\n              }\n            }\n          }\n          author {\n            name\n            picture {\n              localFile {\n                childImageSharp {\n                  gatsbyImageData(width: 30)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    category: strapiCategory(slug: { eq: $slug }) {\n      name\n    }\n  }\n`;\n\nconst Category = ({ data }) => {\n  const articles = data.articles.edges;\n  const category = data.category.name;\n  const seo = {\n    metaTitle: category,\n    metaDescription: `All ${category} articles`,\n  };\n\n  return (\n    <Layout seo={seo}>\n      <div className=\"uk-section\">\n        <div className=\"uk-container uk-container-large\">\n          <h1>{category}</h1>\n          <ArticlesComponent articles={articles} />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Category;\n"],"sourceRoot":""}